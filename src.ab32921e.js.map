{"version":3,"sources":["src/collitionDetection.js","src/ball.js","src/paddle.js","src/input.js","src/brick.js","src/level.js","src/levelnames.js","src/game.js","src/index.js"],"names":["detectCollision","ball","gameObject","bottomOfBall","position","y","height","topOfBall","leftOfBall","x","rightOfBall","width","topOfGameObject","leftSideOfGameObject","rightSideOfGameObject","bottomOfObject","Ball","game","image","document","getElementById","reset","speed","ctx","drawImage","deltaTime","lives","paddle","Paddle","maxSpeed","gameWidth","gameHeight","markToDelete","fillStyle","fillRect","InputHandler","addEventListener","event","keyCode","moveLeft","moveRight","tooglePause","start","stop","Brick","buildLevel","level","bricks","generateLevel","forEach","row","rowIndex","brick","brickIndex","push","calculatedLevel","getRows","calculatedRow","itemInRow","getOneOrZerro","Math","round","random","getRandomIntegerTill","tempRows","a","floor","getLevelName","index","levelNames","GAMESTATE","PAUSED","RUNNING","MENU","GAMEOVER","Game","gameObjects","currentLevel","currentLevelName","gameState","prevState","obj","update","filter","length","draw","rect","fill","font","textAlign","fillText","date","Date","dateString","getHours","getMinutes","getDay","getMonth","getFullYear","canvas","getContext","GAME_WIDTH","GAME_HEIGHT","lastTime","gameLoop","timeStamp","clearRect","requestAnimationFrame"],"mappings":"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","file":"src.ab32921e.js","sourceRoot":"..","sourcesContent":["export function detectCollision(ball, gameObject) {\n  let bottomOfBall = ball.position.y + ball.height;\n  let topOfBall = ball.position.y;\n  let leftOfBall = ball.position.x;\n  let rightOfBall = leftOfBall + ball.width;\n\n  let topOfGameObject = gameObject.position.y;\n  let leftSideOfGameObject = gameObject.position.x;\n  let rightSideOfGameObject = leftSideOfGameObject + gameObject.width;\n  let bottomOfObject = topOfGameObject + gameObject.height;\n\n  if (\n    bottomOfBall >= topOfGameObject &&\n    topOfBall <= bottomOfObject &&\n    leftOfBall <= rightSideOfGameObject &&\n    rightOfBall >= leftSideOfGameObject\n  ) {\n    return true;\n  }\n  return false;\n}\n","import { detectCollision } from \"./collitionDetection\";\n\nexport default class Ball {\n  constructor(game) {\n    this.game = game;\n    this.height = 16;\n    this.width = 16;\n    this.image = document.getElementById(\"imageBall\");\n    this.reset();\n  }\n\n  reset() {\n    this.speed = { x: 5, y: 5 };\n    this.position = { x: 10, y: 10 };\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.height,\n      this.width\n    );\n  }\n\n  update(deltaTime) {\n    this.position.x += this.speed.x;\n    this.position.y += this.speed.y;\n\n    let bottomOfBall = this.position.y + this.height;\n\n    // top\n    if (this.position.y < 0) {\n      this.speed.y = -this.speed.y;\n    }\n\n    // bottom\n    if (bottomOfBall > this.game.height) {\n      this.reset();\n      this.game.lives--;\n    }\n\n    // wall\n    if (this.position.x + this.width > this.game.width || this.position.x < 0) {\n      this.speed.x = -this.speed.x;\n    }\n\n    if (detectCollision(this, this.game.paddle)) {\n      this.speed.y = -this.speed.y;\n    }\n  }\n}\n","export default class Paddle {\n  constructor(game) {\n    this.width = 150;\n    this.height = 20;\n    this.maxSpeed = 7;\n    this.speed = 0;\n    this.gameWidth = game.width;\n    this.gameHeight = game.height;\n    this.position = {\n      x: game.width / 2 - this.width / 2,\n      y: game.height - this.height - 10\n    };\n    this.markToDelete = false;\n  }\n  draw(ctx) {\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n  moveLeft() {\n    this.speed = -this.maxSpeed;\n  }\n  moveRight() {\n    this.speed = this.maxSpeed;\n  }\n  stop() {\n    this.speed = 0;\n  }\n  update(deltaTime) {\n    this.position.x += this.speed;\n\n    if (this.position.x < 0) {\n      this.position.x = 0;\n    } else if (this.position.x > this.gameWidth - this.width) {\n      this.position.x = this.gameWidth - this.width;\n    }\n  }\n}\n","export default class InputHandler {\n  constructor(paddle, game) {\n    document.addEventListener(\"keydown\", event => {\n      switch (event.keyCode) {\n        case 37:\n          paddle.moveLeft();\n          break;\n        case 39:\n          paddle.moveRight();\n          break;\n        case 27:\n          game.tooglePause();\n          break;\n        case 32:\n          game.start();\n          break;\n        default:\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.keyCode) {\n        case 37:\n          if (paddle.speed < 0) paddle.stop();\n          break;\n        case 39:\n          if (paddle.speed > 0) paddle.stop();\n          break;\n        default:\n      }\n    });\n  }\n}\n","import { detectCollision } from \"./collitionDetection\";\n\nexport default class Brick {\n  constructor(game, position) {\n    this.game = game;\n    this.position = position;\n    this.width = 80;\n    this.height = 24;\n    this.image = document.getElementById(\"imageBrick\");\n    this.markToDelete = false;\n  }\n\n  update(deltaTime) {\n    if (detectCollision(this.game.ball, this)) {\n      this.game.ball.speed.y = -this.game.ball.speed.y;\n      this.markToDelete = true;\n    }\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n}\n","import Brick from \"./brick\";\n\nexport function buildLevel(game, level) {\n  let bricks = [];\n\n  let genLevels = generateLevel(level);\n\n  genLevels.forEach((row, rowIndex) => {\n    row.forEach((brick, brickIndex) => {\n      if (brick === 1) {\n        let position = {\n          x: 80 * brickIndex,\n          y: 20 + 24 * rowIndex\n        };\n        bricks.push(new Brick(game, position));\n      }\n    });\n  });\n\n  return bricks;\n}\n\nfunction generateLevel(level) {\n  level++;\n  let calculatedLevel = [];\n\n  for (let row = 0; row < getRows(level); row++) {\n    let calculatedRow = [];\n    for (let itemInRow = 0; itemInRow <= 8; itemInRow++) {\n      calculatedRow.push(getOneOrZerro());\n    }\n    calculatedLevel.push(calculatedRow);\n  }\n\n  return calculatedLevel;\n}\n\nfunction getOneOrZerro() {\n  return Math.round(Math.random());\n}\n\nfunction getRows(level) {\n  getRandomIntegerTill(level);\n  let tempRows = level;\n  return tempRows > 0 ? tempRows : 1;\n}\n\nfunction getRandomIntegerTill(a) {\n  return Math.floor(Math.random() * a);\n}\n","export function getLevelName(index) {\n  return levelNames()[index];\n}\n\nexport function levelNames() {\n  return [\n    \"George Washington\",\n    \"John Adams\",\n    \"Thomas Jefferson\",\n    \"James Madison\",\n    \"James Monroe\",\n    \"John Quincy Adams\",\n    \"Andrew Jackson\",\n    \"Martin Van Buren\",\n    \"William Henry Harrison\",\n    \"John Tyler\",\n    \"James K. Polk\",\n    \"Zachary Taylor\",\n    \"Millard Fillmore\",\n    \"Franklin Pierce\",\n    \"James Buchanan\",\n    \"Abraham Lincoln\",\n    \"Andrew Johnson\",\n    \"Ulysses S. Grant\",\n    \"Rutherford B. Hayes\",\n    \"James Garfield\",\n    \"Chester A. Arthur\",\n    \"Grover Cleveland\",\n    \"Benjamin Harrison\",\n    \"Grover Cleveland\",\n    \"William McKinley\",\n    \"Theodore Roosevelt\",\n    \"William Howard Taft\",\n    \"Woodrow Wilson\",\n    \"Warren G. Harding\",\n    \"Calvin Coolidge\",\n    \"Herbert Hoover\",\n    \"Franklin D. Roosevelt\",\n    \"Harry S. Truman\",\n    \"Dwight D. Eisenhower\",\n    \"John F. Kennedy\",\n    \"Lyndon B. Johnson\",\n    \"Richard M. Nixon\",\n    \"Gerald R. Ford\",\n    \"James Carter\",\n    \"Ronald Reagan\",\n    \"George H. W. Bush\",\n    \"William J. Clinton\",\n    \"George W. Bush\",\n    \"Barack Obama\",\n    \"Donald J. Trump\"\n  ];\n}\n","import Ball from \"./ball\";\nimport Paddle from \"./paddle\";\nimport InputHandler from \"./input\";\nimport { buildLevel } from \"./level\";\nimport { getLevelName } from \"./levelnames\";\n\nconst GAMESTATE = {\n  PAUSED: 0,\n  RUNNING: 1,\n  MENU: 2,\n  GAMEOVER: 3\n};\n\nexport default class Game {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this.gameObjects = [];\n    this.currentLevel = 0;\n    this.currentLevelName = 0;\n    this.lives = 3;\n    this.gameState = GAMESTATE.MENU;\n    this.ball = new Ball(this);\n    this.paddle = new Paddle(this);\n    this.bricks = [];\n    new InputHandler(this.paddle, this);\n  }\n\n  start() {\n    if (this.gameState !== GAMESTATE.MENU) {\n      return;\n    }\n    this.gameState = GAMESTATE.RUNNING;\n    this.currentLevelName = getLevelName(this.currentLevel);\n    this.bricks = buildLevel(this, this.currentLevel++);\n    this.gameObjects = [this.ball, this.paddle];\n  }\n\n  tooglePause() {\n    if (this.gameState === GAMESTATE.RUNNING) {\n      this.gameState = GAMESTATE.PAUSED;\n    } else if (this.gameState === GAMESTATE.PAUSED) {\n      this.gameState = GAMESTATE.RUNNING;\n    }\n  }\n\n  update(deltaTime) {\n    if (this.lives === 0) {\n      this.gameState = GAMESTATE.GAMEOVER;\n    }\n\n    this.prevState = this.gameState;\n\n    if (this.gameState === GAMESTATE.RUNNING) {\n      [...this.gameObjects, ...this.bricks].forEach(obj =>\n        obj.update(deltaTime)\n      );\n      this.bricks = this.bricks.filter(obj => !obj.markToDelete);\n\n      if (this.bricks.length < 1) {\n        this.gameState = GAMESTATE.MENU;\n      }\n    }\n  }\n  draw(ctx) {\n    [...this.gameObjects, ...this.bricks].forEach(obj => obj.draw(ctx));\n\n    if (this.gameState === GAMESTATE.PAUSED) {\n      ctx.rect(0, 0, this.width, this.height);\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n      ctx.fill();\n\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(\"Paused\", this.width / 2, this.height / 2);\n    } else if (this.gameState === GAMESTATE.MENU) {\n      ctx.rect(0, 0, this.width, this.height);\n      ctx.fillStyle = \"rgba(0,0,0,1)\";\n      ctx.fill();\n\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"center\";\n\n      if (this.currentLevel === 0) {\n        ctx.fillText(\n          \"Shoot Spacebar to start the game,\",\n          this.width / 2,\n          this.height / 2\n        );\n        ctx.fillText(\n          \"start with level: \" + getLevelName(this.currentLevel),\n          this.width / 2,\n          this.height / 2 + 40\n        );\n      } else {\n        ctx.fillText(\n          \"Shoot Spacebar to start level: \",\n          this.width / 2,\n          this.height / 2\n        );\n        ctx.fillText(\n          getLevelName(this.currentLevel),\n          this.width / 2,\n          this.height / 2 + 40\n        );\n      }\n    } else if (this.gameState === GAMESTATE.GAMEOVER) {\n      ctx.rect(0, 0, this.width, this.height);\n      ctx.fillStyle = \"rgba(255,0,0,0.6)\";\n      ctx.fill();\n\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(\"Game over, my friend!\", this.width / 2, this.height * 0.3);\n      ctx.fillText(\n        \"You can carry water for \" + this.currentLevelName,\n        this.width / 2,\n        this.height * 0.3 + 50\n      );\n      ctx.fillText(\n        \"Share your achievements on facebook, twitter, instagram :) \",\n        this.width / 2,\n        this.height * 0.3 + 150\n      );\n\n      let date = new Date();\n      let dateString =\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \" \" +\n        date.getDay() +\n        \"/\" +\n        date.getMonth() +\n        \"/\" +\n        date.getFullYear();\n\n      ctx.fillText(dateString, this.width / 2, this.height / 2 + 100);\n    }\n\n    ctx.rect(0, 0, this.width, this.height);\n    ctx.fillStyle = \"rgba(0,0,0,0)\";\n    ctx.fill();\n\n    ctx.font = \"12px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"Level:     \" + this.currentLevel, this.width - 60, 50);\n    ctx.fillText(\"Lives left:\" + this.lives, this.width - 60, 30);\n    ctx.fillText(this.currentLevelName, this.width - 60, 70);\n  }\n}\n","import \"./styles.css\";\nimport Game from \"/src/game\";\n\nlet canvas = document.getElementById(\"gameScreen\");\nlet ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\n\nlet lastTime = 0;\n\nfunction gameLoop(timeStamp) {\n  let deltaTime = timeStamp - lastTime;\n  lastTime = timeStamp;\n  ctx.clearRect(0, 0, game.width, game.height);\n  game.update(deltaTime);\n  game.draw(ctx);\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}